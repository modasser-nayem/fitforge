generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  photo     String?
  role      UserRole
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  trainer   Trainer?
  trainee   Trainee?
}

model Trainer {
  userId    String   @id
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  schedules Schedule[]
}

model Trainee {
  userId   String   @id
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  bookings Booking[]
}

model Schedule {
  id        String    @id @default(uuid())
  date      DateTime
  startTime DateTime
  endTime   DateTime
  trainerId String
  trainer   Trainer   @relation(fields: [trainerId], references: [userId])
  capacity  Int       @default(10)
  bookings  Booking[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@index([date, startTime])
  @@unique([date, trainerId])
}

model Booking {
  id         String   @id @default(uuid())
  scheduleId String
  traineeId  String
  createdAt  DateTime @default(now())

  schedule   Schedule @relation(fields: [scheduleId], references: [id], onDelete: Cascade)
  trainee    Trainee     @relation(fields: [traineeId], references: [userId], onDelete: Cascade) 

  @@unique([scheduleId, traineeId])
}

enum UserRole {
  ADMIN
  TRAINER
  TRAINEE
}